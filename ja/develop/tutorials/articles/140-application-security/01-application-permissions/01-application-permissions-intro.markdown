---
header-id: defining-application-permissions
---

# アプリケーションの権限の定義

[TOC levels=1-4]

アプリケーションを記述する際は、ほとんどの場合、アクセス許可によって保護する必要のあるアプリケーションまたはそのデータの部分があります。すべての機能またはデータにアクセスする必要があるユーザーもいますが、ほとんどのユーザーには必要ありません。

多くのプラットフォームでは、開発者は自分でセキュリティモデルを作成する必要があります。@product@では、アプリケーションセキュリティモデルが提供されているので、それを活用できます。

幸いなことに、アプリケーションの種類に関係なく、アプリケーションとそのコンテンツへのアクセスはアクセス許可で制御できます。Liferayのアクセス許可システムと、アプリケーションにアクセス許可を追加する方法について学びます。

アクセス許可システムには、*リソース*、*アクション*、および*権限*の3つの部分があります。

**アクション**：ユーザーが実行できる操作。たとえば、ユーザーはブックマークのアプリケーションで`ADD_TO_PAGE`、`CONFIGURATION`、および`VIEW`の操作を行うことができますユーザーはブックマークのエントリーエンティティで`ADD_ENTRY`、`DELETE`、`PERMISSIONS`、`UPDATE`、および`VIEW`のアクションを実行できます。

**リソース**：アクションを実行できるアプリケーションまたはエンティティの一般的な表現。リソースは権限のチェックに使用されます。たとえば、リソースには、インスタンスIDが`hF5f`のRSSアプリケーション、グローバルにスコープが設定されたWikiページ、サイトXのブックマークエントリ、IDが`5052`のメッセージボードの投稿を含めることができます。

**権限**：リソースに対してアクションを実行できるかどうかを判断するフラグ。データベースでは、リソースとアクションはペアで保存されます。`ResourceAction`テーブルの各エントリには、ポートレットまたはエンティティの名前とアクションの名前の両方が含まれています。たとえば、*ブックマークアプリケーションの表示*に関する`VIEW`アクションは、`com_liferay_bookmarks_web_portlet_BookmarksPortlet`ポートレットIDに関連付けられています。*ブックマークフォルダの表示*または*ブックマークエントリの表示*に関する`VIEW`アクションは、`com.liferay.bookmarks.model.BookmarksFolder`および`com.liferay.bookmarks.model.BookmarksEntry`エンティティにそれぞれ関連付けられています。

したがって、アクセス許可を行うには、*リソース*で*アクション*を実行する*権限*を持つ*ユーザー*（ロール）を定義します。ユーザー定義は、アプリケーションがデプロイされると管理者によって行われます。開発者は、リソース、アクション、およびデフォルトの権限を定義します。

頭字語*DRAC*で表す4つのステップで、アプリケーションに権限を実装できます。

1. すべてのリソースとその権限を定義します（<b>D</b>）。

2. すべての定義済みリソースをアクセス許可システムに登録します（<b>R</b>）。

3. 必要な権限をリソースに関連付けます（<b>A</b>）。

4. リソースを返す前に権限を確認します（<b>C</b>）。

次の4つのチュートリアルでは、これらの手順を詳細に説明します。

