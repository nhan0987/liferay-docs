---
header-id: introduction-to-liferay-development
---

# Liferay開発の概要

[TOC levels=1-4]

新しいプロジェクトを始めるたびに、コードやそのプロジェクトをサポートする基盤のコードを最初から書き直した経験がありますか？恐らく、ほぼ毎回、新しいプロジェクトに取り掛かる度に何かしらを書き直すことになるのではないでしょうか。新しいプロジェクトに取り掛かる度に、新しいデータベーステーブルのセットや、新しいAPI、新しいCSSクラスとHTMLのセット、新しいJavaScript関数のセットを作成しているように感じることもあるかもしれません。

 @product@は、機能のベースラインセットを提供するプラットフォームなので、繰り返しコードを書くことなく、アプリケーションやサイトの機能に取り掛かることが可能になります。

![@product@を使うと、最初から開発を始める必要がないのです。](../../images/dont-start-from-scratch.png)

## 製品、フレームワーク、およびライブラリのスイートの活用

@product@では、迅速な開発と優れたパフォーマンス、そして使いやすさを兼ね備えた機能とフレームワークを駆使して、Webアプリケーション、モバイルアプリケーション、Webサービスを素早く構築することができるプラットフォームを提供しています。基本的なプラットフォームはデフォルトで組み込まれており、アプリケーション作成に必要な堅牢なコンテナとして提供されるため、最初から作る場合よりも圧倒的に短い時間でシステムを構築することができます。

また、Web Experience管理、フォーラムやWikiなどのコラボレーションアプリケーション、ドキュメントとメディア、ブログといったよく使われるアプリケーションのデフォルトセットが付属しているので、すぐに使い始めることもできます。これらのアプリケーションは、システム本体と同様にカスタマイズが可能です。独自の機能を追加する場合は、Liferayは拡張性を持つ設計になっているので、機能拡張も簡単に行えます。

![@product@にはアプリケーションスイートが含まれているので、 すぐにサイト作成に取りかかることができます。](../../images/liferay-suites.png)

つまり、Liferayは開発者のために開発者によって作成されたものであり、作業がより迅速かつ簡単にでき、コードを一々書くこともなく、モバイルアプリケーション開発をよりスムーズに行うことができます。

## Webサイト、イントラネット、コラボレーション環境、モバイルアプリなどのビルド

Liferayで最もよく挙げられる特徴は、その高い汎用性です。数十万の記事を含む非常に大規模なWebサイトから、小規模なサイト、よりダイナミックでインタラクティブなサイトまで、ありとあらゆる種類のWebサイトの構築に対応できます。この場合のWebサイトには、公開サイト、イントラネットのような社内用サイト、コラボレーションプラットフォームのようにその双方が混在する環境が含まれます。


開発者の多くは、このようなケースのうちの１つを対象としてLiferayを使用しはじめますが、その後、他のプロジェクトにも適していると実感しています。

## 独自のアプリケーションの作成と既存のアプリケーションの拡張

@product@はJavaプラットフォームに基づいており、新しいアプリケーションの追加、既存のアプリケーションのカスタマイゼーション、その動作仕様の微調整や、新しいテーマを作成することで拡張できます。これを行うには、Java、Scala、 jRuby、Jython、GroovyといったJVMがサポートするプログラミング言語であれば何でも利用できます。
@product@は軽量で、さまざまなJava EEコンテナやアプリケーションサーバーやデータベースにデプロイできます。その高いカスタマイズ性により、ソースコードを編集することなく多くのアプリケーションサーバーやデータベースのサポートを追加することができます。ただ必要な機能が備わったモジュールを開発して、デプロイするだけでいいのです。

以下は、@product@の機能の拡張またはカスタマイズが最もよく使われるケースです。

1. 新規の本格的なWebアプリケーションの開発: @product@での典型的なWebアプリケーション開発の例としては、[ポートレット](/docs/7-1/tutorials/-/knowledge_base/t/portlets)開発があります。ポートレットは既存のアプリケーションを統合するのに一般的な方法です。他のアプリケーションとの統合の必要がなければ、ポートレットに限らず開発できます。
2. [既存のWebアプリケーションや機能のカスタマイズ](/docs/7-1/tutorials/-/knowledge_base/t/customizing): 
@product@は、拡張性を重視して設計されています。多くの拡張ポイントを活用して、既存機能の拡張ができます。これらのほとんどが、アノテーション（詳細は後述）を持つ単一Javaクラスで開発できます。
3. 外部システム、モバイルアプリ、IoTデバイスなどに対して、新しい[Webサービス](/docs/7-1/tutorials/-/knowledge_base/t/web-services)の作成
4. バックエンドとしてLifeayを活用する[モバイルアプリケーション](/docs/7-0/tutorials/-/knowledge_base/t/mobile)の開発: Liferay Screensおよび[Liferay Mobile SDK](/docs/7-0/tutorials/-/knowledge_base/t/mobile-sdk)によって、短期間でコードを書くことができます。
5. カスタム[テーマ](/docs/7-1/tutorials/-/knowledge_base/t/introduction-to-themes)の開発: プロジェクトのビジュアルに適したルック＆フィール調整できます。

![開発者は、@product@をさまざまな方法で使用できます。](../../images/liferay-developer-roles-diagram.png)

Liferayプラットフォームは、好きなテクノロジー(Angular、React、Backbone、Cocoa、AndroidのMaterial Designコンポーネント、Apache Cordovaなど)を使用して、Webやモバイルアプリケーションを開発するためのヘッドレスプラットフォームとして使用することができます。また、ポートレットなどのテクノロジーを活用して、複数のアプリケーションを同じWebページ上に配置できるWebインテグレーションレイヤーとしても使用できます。
