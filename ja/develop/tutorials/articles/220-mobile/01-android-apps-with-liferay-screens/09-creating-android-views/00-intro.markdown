---
header-id: creating-android-views
---

# Androidビューの作成

<p class="alert alert-info"><span class="wysiwyg-color-blue120">ご覧のページは、お客様の利便性のために一部機械翻訳されています。また、ドキュメントは頻繁に更新が加えられており、翻訳は未完成の部分が含まれることをご了承ください。最新情報は都度公開されておりますため、必ず英語版をご参照ください。翻訳に問題がある場合は、<a href="mailto:support-content-jp@liferay.com">こちら</a>までご連絡ください。</span></p>

[TOC levels=1-4]

独自のビューを作成することにより、モバイルアプリのレイアウト、スタイル、機能をカスタマイズできます。 それらを最初から作成するか、既存のビューを基盤として使用できます。 ビューには、Screenlet動作を実装するためのViewクラス、リスナーに通知してインタラクターを呼び出すためのScreenletクラス、およびUIを指定するためのXMLファイルが含まれます。 4つのLiferayスクリーンビュータイプは、異なるレベルのカスタマイズと親ビューの継承をサポートします。 各ビュータイプが提供するものは次のとおりです。

**テーマビュー：** は、現在のビューと同じ構造を示しますが、ビューのリソースのテーマの色と色合いを変更します。 既存のすべてのビューは、さまざまなスタイルでテーマ設定できます。 ビューの色は、Android [カラーパレット](https://www.google.com/design/spec/style/color.html#color-color-palette)の現在の値を反映しています。 あなたが別のビューセットの色で1セットのビューを使用する場合は、（例えば、アプリのテーマでこれらの色を使用することができます `colorPrimary_default`、 `colorPrimary_material`、 `colorPrimary_westeros`）。

**子ビュー：** は親ビューと同じUIコンポーネントを表示しますが、外観と位置を変更できます。

**拡張ビュー：** は親ビューの機能と外観を継承しますが、両方を追加および変更できます。

**フルビュー：** は、スクリーンレットの完全なスタンドアロンビューを提供します。 フルビューは、スクリーンレットの現在のテーマとはまったく異なる機能と外観を実装するのに理想的です。

このチュートリアルでは、4種類すべてのビューを作成する方法について説明します。 Viewの概念とコンポーネントを理解するには、Android用Liferay Screensの [アーキテクチャ](/docs/7-1/tutorials/-/knowledge_base/t/architecture-of-liferay-screens-for-android) を調べてください。 また、チュートリアル [Androidスクリーンレットの作成](/docs/7-1/tutorials/-/knowledge_base/t/creating-android-screenlets) は、ビューに必要なスクリーンレットクラスを作成または拡張するのに役立ちます。 さあ、素晴らしいビューを作成する準備をしてください！

## ビューの場所を決定する

最初に、ビューを再利用するか、現在のアプリ専用にするかを決定します。別のアプリで再利用する予定がない場合、または再配布したくない場合は、アプリプロジェクトで作成します。

別のアプリでビューを再利用する場合は、新しいAndroidアプリケーションモジュールで作成します。チュートリアル [Android Screenletsのパッケージ化](/docs/7-1/tutorials/-/knowledge_base/t/packaging-your-screenlets) その方法を説明しています。 ビューのプロジェクトが準備できたら、作成を開始できます。

最初に、テーマビューを作成する方法を学びます。
