---
header-id: what-is-service-builder-0
---

# 本サービスビルダーとは

<p class="alert alert-info"><span class="wysiwyg-color-blue120">ご覧のページは、お客様の利便性のために一部機械翻訳されています。また、ドキュメントは頻繁に更新が加えられており、翻訳は未完成の部分が含まれることをご了承ください。最新情報は都度公開されておりますため、必ず英語版をご参照ください。翻訳に問題がある場合は、<a href="mailto:support-content-jp@liferay.com">こちら</a>までご連絡ください。</span></p>

[TOC levels=1-4]

<div class="learn-path-step row">
    <p id="stepTitle">バックエンドの生成</p><p>手順1/3</p>
</div>

次に、本サービスビルダーを使用して、アプリケーションの作成、読み取り、アップデート、削除、および検索の運用を生成します。 また、本サービスビルダーを使用して、アプリケーションに必要なモデル、永続性、および本サービスレイヤーを生成します。 その後、アプリケーションに必要なビジネスロジックを追加できます。

## ゲストブックアプリケーションの設計

プロトタイプアプリケーションでは、単一のゲストブックのエントリを定義し、リストに表示しました。 完全なアプリケーションは、複数のゲストブックとそのエントリを処理します。 これを機能させるには、データベースに2つのテーブルを作成します。1つはゲストブック用、もう1つはゲストブックエントリ用です。

![図1：完了したら、ゲストブックは複数のゲストブックをサポートし、多くのLiferay機能を利用します。](../../../images/guestbook-final.png)

## 本サービスレイヤー

このアプリケーションはデータ駆動型です。 これは、データの保存と回収に本サービスを使用します。 アプリケーションはデータを要求し、本サービスが永続レイヤーからデータを取得します。 その後、アプリケーションはこのデータをユーザーへ表示し、ユーザーはそれを閲覧または変更できます。 データが変更された場合、アプリケーションはそのデータを本サービスに返し、永続レイヤーを呼び出して保存します。 アプリケーションは、本サービスがどのように動作するかについて何も知る必要はありません。

開始するには本サービスビルダープロジェクトを作成し、その`service.xml`ファイルに、このコードを生成するために必要なすべてのエンティティを追加します。

1.  Liferay @ide@で、*File* → *New* → *Liferay Module Project*をクリックします。

2.  プロジェクトに`guestbook`と名前を付けます。

3.  プロジェクトテンプレート名に、`service-builder`を選択します。

4.  *Next*をクリックします。

5.  *Package Name*用に、`com.liferay.docs.guestbook`を入力します。

6.  *Finish*をクリックします。

これにより、APIモジュール（`guestbook-api`）と本サービスモジュール（`guestbook-service`）の2つのモジュールが作成されます。 次に、それらの使用方法を学習します。

![図2：現在のプロジェクトの構造](../../../images/guestbook-service-project.png)
