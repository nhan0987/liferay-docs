---
header-id: providing-entity-specific-local-services-for-staging
---

# ステージング用のエンティティ固有のローカルサービスの提供

<p class="alert alert-info"><span class="wysiwyg-color-blue120">ご覧のページは、お客様の利便性のために一部機械翻訳されています。また、ドキュメントは頻繁に更新が加えられており、翻訳は未完成の部分が含まれることをご了承ください。最新情報は都度公開されておりますため、必ず英語版をご参照ください。翻訳に問題がある場合は、<a href="mailto:support-content-jp@liferay.com">こちら</a>までご連絡ください。</span></p>

[TOC levels=1-4]

データハンドラーを作成するときは、アプリのローカルサービスを活用して、そのエンティティに対してステージング関連のタスクを実行する必要があります。 ステージングフレームワークがエンティティ（つまり、ステージングモデル）で動作する場合、エンティティのローカルサービスだけから重要な情報を管理できないことがよくあります。代わりに、ステージングフレームワークがアクセスできるように、基本的な機能を作り直す必要があります。 これは、共通の祖先（つまり、インターフェースまたは基本クラス）を共有していないサービスが原因です。

*段階モデルリポジトリ* フレームワークは、アプリの段階モデルをローカルサービスにリンクすることにより、この障壁を取り除きます。 これにより、ステージングフレームワークは、処理中のエンティティに基づいてステージングされたモデルリポジトリを独立して呼び出すことができます。 これにより、処理している段階的なモデルデータ用に特別に調整されたエンティティ固有のメソッドにアクセスできます。

![図1：ステージングされたモデルリポジトリは、ローカルサービスにステージング固有の機能レイヤーを提供します。](../../../images/staged-model-repository.png)

種類のどの *企業固有の* 我々はここについての方法を話していますか？ データハンドラーは、エクスポートメソッドやインポートメソッドなどの特定のアクションセットのみを公開します。 ステージングモデルリポジトリフレームワークは、ローカルサービスを使用して公開されていない特定のステージングモデルに対してCRUD操作を提供します。

段階的モデルリポジトリは、アプリのローカルサービスの使用を回避しません。 ステージング固有の機能を提供する追加レイヤーのみを提供します。 では、これはどのように機能しますか？ 簡単なステージングプロセスの概要を以下に示します。

  - `* StagedModelDataHandler` は、提供された [LARファイルの](/docs/7-1/tutorials/-/knowledge_base/t/understanding-data-handlers#liferay-archive-lar-file) XMLをモデルに逆シリアル化します。
  - `* StagedModelRepository` は、環境およびビジネスロジックに基づいてモデルを更新し、ステージングの目的でエンティティ固有のCRUD操作（UUID操作など）を提供します。
  - ローカルサービスは `* StagedModelRepository` から呼び出され、残りのプロセスを処理します。

かなりクールですよね？ アプリでStaged Model Repositoryフレームワークを実装および使用する方法を学びます。
