---
header-id: creating-configuration-files
---

# 構成ファイルの作成

<p class="alert alert-info"><span class="wysiwyg-color-blue120">ご覧のページは、お客様の利便性のために一部機械翻訳されています。また、ドキュメントは頻繁に更新が加えられており、翻訳は未完成の部分が含まれることをご了承ください。最新情報は都度公開されておりますため、必ず英語版をご参照ください。翻訳に問題がある場合は、<a href="mailto:support-content-jp@liferay.com">こちら</a>までご連絡ください。</span></p>

[TOC levels=1-4]

システム設定には、構成エントリを変更すると使用可能になる [*Export*](/docs/7-1/user/-/knowledge_base/u/system-settings#exporting-and-importing-configurations) オプションが用意されています。 エクスポートは、作成するための推奨される方法である `の.config` ファイル：あなたがダウンロード `の.config` にエントリの設定を含むファイル `キー=値` 形式を。 @product@は、1つの値のみが変更された場合でも、エントリの利用可能な設定キーと値の合計をエクスポートします。 単一の構成エントリまたは変更された構成のセット全体をエクスポートできます。

ファイル名の競合を回避するには、一意の識別子を使用して構成ファイルに名前を付けます。 たとえば、Webコンテンツ機能をサポートするジャーナルサービスエントリには、次のファイル名があります。

    com.liferay.journal.configuration.JournalServiceConfiguration.config

![図1：Webコンテンツシステム設定のエントリには、バックエンドID <code>com.liferay.journal.configuration.JournalServiceConfiguration</code>ます。](../../../../images/config-web-content-entry.png)

## キー/値の構文

`.config` ファイルのすべてのキーと値の構文は同じです。

    configurationName="value"

特殊文字を含まない単一値構成の場合、知っておくべきことはこれだけです。 複数の値と特定の文字を含む設定では、若干の変更が必要です。

## 複数値の設定

構成エントリには、複数の値を受け入れるプロパティを含めることができます。 たとえば、サポートされているファイル拡張子を指定する構成プロパティには、複数の値が必要です。 `.config` ファイルに複数値設定を書き込む方法は次のとおりです。

    multiValueSetting=["Value 1","Value 2", ...]

値の間（コンマの後）にスペース文字を使用しないでください。 プロパティは読み込まれません。

[コンテンツ]セクションの[システム設定]で[Webコンテンツ]カテゴリを開き、仮想インスタンスのスコープとして[ *Webコンテンツ* を選択します。 *Characters Blacklist*複数の単一値エントリのように見えます。

![図2：Webコンテンツシステム設定のエントリには、多くの*キャラクターブラックリスト*フィールドがあります。](../../../../images/config-web-content-blacklist.png)

構成ファイルでは、これは実際にはカンマ区切り値の配列を持つ単一のキーです。

    charactersblacklist=["&","'","@","\\","]","}",":","\=",">","/","<","[","{","%","+","#","`","?","\"",";","*","~"]

## エスケープ文字

二重引用符（`"`）と等号（`=`）は、 `.config` ファイルで *エスケープ* する必要があります。 エスケープとは、別の文字を使用して、文字を通常の方法で使用してはならないことを示します。 二重引用符と等号は `.config` ファイルですでに使用されているため、エスケープすると、フレームワークは通常の方法では読み取らず、値の一部として渡すようになります。 ``\\ `を使用して、``.config`ファイル内の文字をエスケープします。

    charactersblacklist=["&","\"","\="]

この設定は、通常のエスケープされていない文字（`&`）と2つのエスケープされた文字（`\ "` および `\ =`）を持つ複数値設定を示しています。

二重引用符と等号の必須のエスケープに加えて、問題を回避するために値内のスペースをエスケープすることは有益です。 この例では、各スペース文字の前に `\\`を使用して、適切に読み取られて処理されるようにしています。

    blacklistBundleSymbolicNames=["Liferay\ Marketplace","Liferay\ Sharepoint\ Connector"]

自分でスペースをエスケープしない場合、フレームワークは展開後にバックスラッシュを追加します。

## 型付き値

`.config` ファイル形式は、特別なタイプマーカー文字を挿入することにより、構成値のタイプの指定をサポートします。 @product@は各構成プロパティの正しいタイプをすでに知っているため、タイプ文字は情報提供の目的でのみ役立ちます。 たとえば、ブール型の構成では、ブール型としてマークする値の直前に *B* あります。

    addDefaultStructures=B"true"

タイプマーカーが `.config` ファイルにある場合は、無視しても問題ありません。 上記の例には、タイプマーカーがなくても同じように機能します。

    addDefaultStructures="true"

## 構成ファイルのデプロイ

構成ファイルを作成したら、それをデプロイします。 それが登録され、ターゲット設定値が自動的に更新されます。

`.config` ファイルを展開するには、 [Liferay Homeの](/docs/7-1/deploy/-/knowledge_base/d/installing-liferay#liferay-home) `osgi / configs` フォルダーに配置します。 さらに構成を変更するには、 `.config` ファイルを直接編集するか、システム設定を使用します。

## 構成ファイルとクラスタリング

クラスター環境では、各ノードに同じシステム構成が必要です。 クラスタノードのベースとなるLiferayのイメージをアセンブルする場合は、システム設定を `.config` ファイルにイメージの `[Liferay Home] / osgi / configs` フォルダにエクスポートできます。 構成は、作成する各クラスターノードに適用されます。
